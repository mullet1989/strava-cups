<h2>leaders</h2>

<a href="/strava/athlete/activities" class="waves-effect waves-light strava-orange btn">activities</a>



<table id="leaders" class="responsive-table highlight">
    <thead>
    <tr>
        <th>name</th>
        <th onclick="sortTable(1)">kudos<i class="down asc"></i></th>
        <th onclick="sortTable(2)">cups<i class="asc"></i></th>
        <th onclick="sortTable(3)">comments<i class="asc"></i></th>
        <th onclick="sortTable(4)">others<i class="asc"></i></th>
        <th onclick="sortTable(5)">speed<i class="asc"></i></th>
        <th onclick="sortTable(6)">#runs<i class="asc"></i></th>
    </tr>
    </thead>
    <tbody>
    {{#each leaders}}
        <tr>
            <td>{{first_name}} {{last_name}}</td>
            <td>{{kudos}}</td>
            <td>{{cups}}</td>
            <td>{{comments}}</td>
            <td>{{others}}</td>
            <td>{{speed}}m/s</td>
            <td>{{number}}</td>
        </tr>
    {{/each}}
    </tbody>
</table>


<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById('leaders');
        switching = true;
        // Set the sorting direction to ascending:
        dir = 'asc';
        /* Make a loop that will continue until
        no switching has been done: */

        // clear all at the beginning
        for (var i = 0; i < table.rows[0].children.length; i++) {
            table.rows[0].children[i].getElementsByTagName('i')[0].classList.remove('down');
            table.rows[0].children[i].getElementsByTagName('i')[0].classList.remove('up');
        }

        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName('TD')[n];
                y = rows[i + 1].getElementsByTagName('TD')[n];
                /* Check if the two rows should switch place,
                based on the direction, asc or desc: */
                if (dir == 'asc') {
                    if (parseInt(x.innerHTML.toLowerCase()) > parseInt(y.innerHTML.toLowerCase())) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == 'desc') {
                    if (parseInt(x.innerHTML.toLowerCase()) < parseInt(y.innerHTML.toLowerCase())) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /* If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again. */
                if (switchcount == 0 && dir == 'asc') {
                    dir = 'desc';
                    switching = true;
                }
            }
        }
        if (dir === 'desc') {
            table.rows[0].children[n].getElementsByTagName('i')[0].classList.remove('down');
            table.rows[0].children[n].getElementsByTagName('i')[0].classList.add('up');
        } else {
            table.rows[0].children[n].getElementsByTagName('i')[0].classList.remove('up');
            table.rows[0].children[n].getElementsByTagName('i')[0].classList.add('down');
        }
    }
</script>
